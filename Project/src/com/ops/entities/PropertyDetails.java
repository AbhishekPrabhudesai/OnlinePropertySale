package com.ops.entities;
// Generated 9 Dec, 2016 6:04:17 PM by Hibernate Tools 4.3.1.Final

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

/**
 * PropertyDetails generated by hbm2java
 */
@Entity
@Table(name = "PropertyDetails", catalog = "PROJECT")
public class PropertyDetails implements java.io.Serializable {

	private int PId;
	private CustomerDetails customerDetails;
	private PinCityDetails pinCityDetails;
	private String PType;
	private double PArea;
	private int PPrice;
	private byte[] PDocument;
	private int PSoldStatus;
	private String PAddress;
	private FlatDetails flatDetails;
	private Set<ImageDetails> imageDetailses = new HashSet<ImageDetails>(0);
	private Set<ShopDetails> shopDetailses = new HashSet<ShopDetails>(0);
	private Set<ResidentialPlotDetails> residentialPlotDetailses = new HashSet<ResidentialPlotDetails>(0);
	private Set<AgricultureLandDetails> agricultureLandDetailses = new HashSet<AgricultureLandDetails>(0);
	private Set<InterestedPropertyDetails> interestedPropertyDetailses = new HashSet<InterestedPropertyDetails>(0);

	public PropertyDetails() {
	}

	public PropertyDetails(int PId, CustomerDetails customerDetails, PinCityDetails pinCityDetails, String PType,
			double PArea, int PPrice, byte[] PDocument, int PSoldStatus, String PAddress) {
		this.PId = PId;
		this.customerDetails = customerDetails;
		this.pinCityDetails = pinCityDetails;
		this.PType = PType;
		this.PArea = PArea;
		this.PPrice = PPrice;
		this.PDocument = PDocument;
		this.PSoldStatus = PSoldStatus;
		this.PAddress = PAddress;
	}

	public PropertyDetails(int PId, CustomerDetails customerDetails, PinCityDetails pinCityDetails, String PType,
			double PArea, int PPrice, byte[] PDocument, int PSoldStatus, String PAddress, FlatDetails flatDetails,
			Set<ImageDetails> imageDetailses, Set<ShopDetails> shopDetailses,
			Set<ResidentialPlotDetails> residentialPlotDetailses, Set<AgricultureLandDetails> agricultureLandDetailses,
			Set<InterestedPropertyDetails> interestedPropertyDetailses) {
		this.PId = PId;
		this.customerDetails = customerDetails;
		this.pinCityDetails = pinCityDetails;
		this.PType = PType;
		this.PArea = PArea;
		this.PPrice = PPrice;
		this.PDocument = PDocument;
		this.PSoldStatus = PSoldStatus;
		this.PAddress = PAddress;
		this.flatDetails = flatDetails;
		this.imageDetailses = imageDetailses;
		this.shopDetailses = shopDetailses;
		this.residentialPlotDetailses = residentialPlotDetailses;
		this.agricultureLandDetailses = agricultureLandDetailses;
		this.interestedPropertyDetailses = interestedPropertyDetailses;
	}
	@GenericGenerator(name="cmid gen",strategy="increment")
	@GeneratedValue(generator="cmid gen")
	@Id
	@Column(name = "P_ID", unique = true, nullable = false)
	public int getPId() {
		return this.PId;
	}

	public void setPId(int PId) {
		this.PId = PId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "C_ID", nullable = false)
	public CustomerDetails getCustomerDetails() {
		return this.customerDetails;
	}

	public void setCustomerDetails(CustomerDetails customerDetails) {
		this.customerDetails = customerDetails;
	}
	/*@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "C_PIN", nullable = false)
	public PinCityDetails getPinCityDetails() {
		return this.pinCityDetails;
	}

	public void setPinCityDetails(PinCityDetails pinCityDetails) {
		this.pinCityDetails = pinCityDetails;
	}*/


	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "P_PIN", nullable = false)
	public PinCityDetails getPinCityDetails() {
		return this.pinCityDetails;
	}

	public void setPinCityDetails(PinCityDetails pinCityDetails) {
		this.pinCityDetails = pinCityDetails;
	}

	@Column(name = "P_TYPE", nullable = false, length = 30)
	public String getPType() {
		return this.PType;
	}

	public void setPType(String PType) {
		this.PType = PType;
	}

	@Column(name = "P_AREA", nullable = false, precision = 22, scale = 0)
	public double getPArea() {
		return this.PArea;
	}

	public void setPArea(double PArea) {
		this.PArea = PArea;
	}

	@Column(name = "P_PRICE", nullable = false)
	public int getPPrice() {
		return this.PPrice;
	}

	public void setPPrice(int PPrice) {
		this.PPrice = PPrice;
	}

	@Column(name = "P_DOCUMENT", nullable = false)
	public byte[] getPDocument() {
		return this.PDocument;
	}

	public void setPDocument(byte[] PDocument) {
		this.PDocument = PDocument;
	}

	@Column(name = "P_SOLD_STATUS", nullable = false)
	public int getPSoldStatus() {
		return this.PSoldStatus;
	}

	public void setPSoldStatus(int PSoldStatus) {
		this.PSoldStatus = PSoldStatus;
	}

	@Column(name = "P_ADDRESS", nullable = false, length = 100)
	public String getPAddress() {
		return this.PAddress;
	}

	public void setPAddress(String PAddress) {
		this.PAddress = PAddress;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public FlatDetails getFlatDetails() {
		return this.flatDetails;
	}

	public void setFlatDetails(FlatDetails flatDetails) {
		this.flatDetails = flatDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public Set<ImageDetails> getImageDetailses() {
		return this.imageDetailses;
	}

	public void setImageDetailses(Set<ImageDetails> imageDetailses) {
		this.imageDetailses = imageDetailses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public Set<ShopDetails> getShopDetailses() {
		return this.shopDetailses;
	}

	public void setShopDetailses(Set<ShopDetails> shopDetailses) {
		this.shopDetailses = shopDetailses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public Set<ResidentialPlotDetails> getResidentialPlotDetailses() {
		return this.residentialPlotDetailses;
	}

	public void setResidentialPlotDetailses(Set<ResidentialPlotDetails> residentialPlotDetailses) {
		this.residentialPlotDetailses = residentialPlotDetailses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public Set<AgricultureLandDetails> getAgricultureLandDetailses() {
		return this.agricultureLandDetailses;
	}

	public void setAgricultureLandDetailses(Set<AgricultureLandDetails> agricultureLandDetailses) {
		this.agricultureLandDetailses = agricultureLandDetailses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "propertyDetails")
	public Set<InterestedPropertyDetails> getInterestedPropertyDetailses() {
		return this.interestedPropertyDetailses;
	}

	public void setInterestedPropertyDetailses(Set<InterestedPropertyDetails> interestedPropertyDetailses) {
		this.interestedPropertyDetailses = interestedPropertyDetailses;
	}

	@Override
	public String toString() {
		return String.format(
				"PropertyDetails [PId=%s, customerDetails=%s, pinCityDetails=%s, PType=%s, PArea=%s, PPrice=%s, PDocument=%s, PSoldStatus=%s, PAddress=%s]",
				PId, customerDetails, pinCityDetails, PType, PArea, PPrice, Arrays.toString(PDocument), PSoldStatus,
				PAddress);
	}

	
	
	

	

}