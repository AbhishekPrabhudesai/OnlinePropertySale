package com.ops.entities;
// Generated 7 Dec, 2016 12:28:39 AM by Hibernate Tools 4.3.1.Final

import javax.imageio.ImageIO;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.Arrays;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ImageDetails generated by hbm2java
 */
@Entity
@Table(name = "ImageDetails", catalog = "PROJECT")
public class ImageDetails implements java.io.Serializable {

	private Integer imgId;
	private PropertyDetails propertyDetails;
	private byte[] imgImages;

	public ImageDetails() {
	}

	public ImageDetails(PropertyDetails propertyDetails, byte[] imgImages) {
		this.propertyDetails = propertyDetails;
		this.imgImages = imgImages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "IMG_ID", unique = true, nullable = false)
	public Integer getImgId() {
		return this.imgId;
	}

	public void setImgId(Integer imgId) {
		this.imgId = imgId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "P_ID", nullable = false)
	public PropertyDetails getPropertyDetails() {
		return this.propertyDetails;
	}

	public void setPropertyDetails(PropertyDetails propertyDetails) {
		this.propertyDetails = propertyDetails;
	}

	@Column(name = "IMG_IMAGES", nullable = false)
	public byte[] getImgImages() {
		return this.imgImages;
	}

	public void setImgImages(byte[] imgImages) {
		this.imgImages = imgImages;
	}

	@Override
	public String toString() 
	{
		try {
			BufferedImage img=ImageIO.read(new ByteArrayInputStream(imgImages));
			System.out.println(img);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		//ImageIO.re
		return String.format("ImageDetails [imgId=%s, imgImages=%s]", imgId, Arrays.toString(imgImages));
	}

	
	
	
}
